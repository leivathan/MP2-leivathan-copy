import java.util.LinkedHashMap;
import java.util.Map;

import org.testng.Assert;
import org.testng.annotations.Test;

/**
 * Test suite for the CheckPassword class.
 * <p>
 * The provided test suite is correct and complete. You should not need to modify it. However, you
 * should understand it. You will need to augment or write test suites for later MPs.
 *
 * @see <a href="https://cs125.cs.illinois.edu/MP/2/">MP2 Documentation</a>
 */
public class CheckPasswordTest {

    /**
     * Timeout for our tests. Solution takes 60 ms.
     */
    private static final int TEST_TIMEOUT = 600;

    /**
     * Test with precomputed values.
     */
    @Test(timeOut = TEST_TIMEOUT)
    public void testCheckPassword() {
        for (Map.Entry<CheckPasswordInput, Boolean> precomputed : PRECOMPUTED_RESULTS.entrySet()) {
            CheckPasswordInput input = precomputed.getKey();
            Boolean output = precomputed.getValue();

            Assert.assertEquals(CheckPassword.checkPassword(input.password,
                    input.minLength, input.minLetter, input.minNumber, input.minSpecial), (boolean) output,
                    "Incorrect result for " + input);
        }
    }

    public static class CheckPasswordInput {
        /** Password to check. */
        final String password;

        /** Minimum password length. */
        final int minLength;

        /** Minimum password letter count. */
        final int minLetter;

        /** Minimum password number count.*/
        final int minNumber;

        /** Minimum password special character count. */
        final int minSpecial;

        @Override
        public String toString() {
            return "CheckPasswordInput{" +
                    "password='" + password + '\'' +
                    ", minLength=" + minLength +
                    ", minLetter=" + minLetter +
                    ", minNumber=" + minNumber +
                    ", minSpecial=" + minSpecial +
                    '}';
        }

        public CheckPasswordInput(String password, int minLength, int minLetter, int minNumber, int minSpecial) {
            this.password = password;
            this.minLength = minLength;
            this.minLetter = minLetter;
            this.minNumber = minNumber;
            this.minSpecial = minSpecial;
        }
    }
    /**
     * Pre-computed testing values.
     */
    private static final Map<CheckPasswordInput, Boolean> PRECOMPUTED_RESULTS =
            new LinkedHashMap<>() {
                {
                    put(new CheckPasswordInput("",
                            0, 0, 0, 0), true);
                    put(new CheckPasswordInput("",
                            1, 0, 0, 0), false);
                    put(new CheckPasswordInput("",
                            0, 1, 0, 0), false);
                    put(new CheckPasswordInput("",
                            0, 0, 1, 0), false);
                    put(new CheckPasswordInput("",
                            0, 0, 0, 1), false);
                    put(new CheckPasswordInput("t",
                            1, 1, 0, 0), true);
                    put(new CheckPasswordInput("u",
                            1, 0, 1, 0), false);
                    put(new CheckPasswordInput("v",
                            1, 0, 0, 1), false);
                    put(new CheckPasswordInput("w",
                            2, 0, 0, 0), false);
                    put(new CheckPasswordInput("1",
                            1, 0, 1, 0), true);
                    put(new CheckPasswordInput("2",
                            1, 1, 0, 0), false);
                    put(new CheckPasswordInput("3",
                            1, 0, 0, 1), false);
                    put(new CheckPasswordInput("4",
                            2, 0, 0, 0), false);
                    put(new CheckPasswordInput("!",
                            1, 0, 0, 1), true);
                    put(new CheckPasswordInput("$",
                            1, 1, 0, 0), false);
                    put(new CheckPasswordInput("@",
                            1, 0, 1, 0), false);
                    put(new CheckPasswordInput("#",
                            2, 0, 0, 0), false);
                    /* BEGIN AUTOGENERATED CODE */
                    put(new CheckPasswordInput("GS@ZKrQxfx9xgWwB",
                            16, 16, 1, 1), false);
                    put(new CheckPasswordInput("Ph9PAo*$y283AVzqeAn22xy&N*00WZ1zqezksY6mjsj&x&Sbq#N5bxUuurQz",
                            60, 40, 9, 7), true);
                    put(new CheckPasswordInput("**#AE9cx&6!^jhjaPuBxDJkvvddp88",
                            30, 20, 4, 8), false);
                    put(new CheckPasswordInput("P*8J9B1Sv8",
                            8, 4, 4, 0), true);
                    put(new CheckPasswordInput("NDFyoYuRZKiXHr7Sb3FKRg!",
                            23, 22, 2, 1), false);
                    put(new CheckPasswordInput("JaTFJvAI!PaRoF",
                            14, 13, 0, 3), false);
                    put(new CheckPasswordInput("wfoI4%G#KYW3ypPAWF!KrXuzwA3rjqNFHKEoL!Q1ddO4q",
                            46, 36, 5, 4), false);
                    put(new CheckPasswordInput("oZFCrDXqDs6p2WhRH1mFDkog^4!zbTQlHIjWFG@SpXRJMcuAr27gQuBYahl",
                            59, 50, 7, 3), false);
                    put(new CheckPasswordInput("XDJ%hk2D1zvoK93*iMtWqa7&EC24O10%jYqm$zkXKG3$KRYQo5&P84l0KaLOLd6",
                            62, 40, 15, 6), true);
                    put(new CheckPasswordInput("oeaK4rX9m1RJ@@cTTKWNO*1Z4&X7x^D0PStm^gexwxDnm%I5VptA",
                            50, 37, 8, 6), true);
                    put(new CheckPasswordInput("Z3AdpDEQUrVEt%!kiEx99^TZ%FYf&3R5X%z0D7KHn89RT#2gy*",
                            50, 34, 10, 8), false);
                    put(new CheckPasswordInput("on0Oj%$A5fa6dvYuE2gTawB6#A1tpwgwdxh01arVw!w",
                            42, 30, 7, 2), true);
                    put(new CheckPasswordInput("bYApn1ZVJV!#nRxNlkF",
                            17, 16, 0, 2), true);
                    put(new CheckPasswordInput("YzcR5eXEBMCp9Is7yjHWo^KCBYd*JM5ZNHX1KWRV4#Zl",
                            44, 35, 10, 3), false);
                    put(new CheckPasswordInput("31ksJ46VACR3MdZBEzyqBd$XY%Q2RxmerBE*oq9%t028a$W",
                            45, 30, 8, 3), true);
                    put(new CheckPasswordInput("Bcb%Vw0Wkz$c47^bICA$@7vbDJg2ap8zIyqa7AztO!ZL#JZn2pMIuMJ0foJtAPug",
                            64, 49, 9, 7), false);
                    put(new CheckPasswordInput("HgwpG$iRLT13JFk78MveGQBK*lMw*%Zb5ggFz$Xs4M517aD4ubPcxbw",
                            55, 40, 11, 5), false);
                    put(new CheckPasswordInput("uG2sFoDY*",
                            7, 5, 0, 0), true);
                    put(new CheckPasswordInput("L8VOkSj!@KJTM4@l$DTdL&2QHIpD$3M5Ya7jpbGJd$Mxk1c$1Mg%EwaDWVL",
                            59, 42, 8, 13), false);
                    put(new CheckPasswordInput("kCi#lwUAk2qZ46bjZ6Ssjzrd0*^QH2qE",
                            32, 23, 5, 3), true);
                    put(new CheckPasswordInput("RAaiLl3LECC3%w4d0nFivaJXN3uUJ",
                            28, 23, 4, 0), true);
                    put(new CheckPasswordInput("VyB%F0!hxTAgi4&SxIlwUA2xecdYU6Tw#vsDoP#7ToyqNmi4LIGTufJp",
                            55, 45, 4, 3), true);
                    put(new CheckPasswordInput("%7Wzl5Z5GyOS",
                            12, 8, 3, 4), false);
                    put(new CheckPasswordInput("Tnwzn*KNiWzcxGs7^evyV5KDrTsk^1rHXTJpI0F*2T@LH^M&8tb6",
                            52, 40, 7, 7), false);
                    put(new CheckPasswordInput("MPpJwO8$g9oe6DRgru*g8iIE@Ua",
                            27, 20, 4, 5), false);
                    put(new CheckPasswordInput("CxE%zjlopcSs7BTOB&^gov@J3Go2K*A75ALJpFai@rrpT66&3uaimUdxh",
                            57, 42, 8, 11), false);
                    put(new CheckPasswordInput("pQe4XcLd$Bmgdn62^Qs8qW1Yo7LxmpgRIB&AD3Jmk^trdXJQ5",
                            49, 38, 8, 4), false);
                    put(new CheckPasswordInput("D%MDfpLt*xkptZcrgkma5C7g61giYUAuzcLJRzU!gxps",
                            43, 35, 4, 2), true);
                    put(new CheckPasswordInput("71Pqil1^6n$OycF7KM",
                            18, 14, 5, 2), false);
                    put(new CheckPasswordInput("SD@MxlEe3Nnc&m8Zt%wS2Nu7rztH!l10NOH2YG",
                            38, 27, 9, 4), false);
                    put(new CheckPasswordInput("h1jLT&rD%Tg4jA2cMjQeYkw4e5wOHN8ROy@AkVLZFh&LbHvrNSDRARYt",
                            55, 46, 4, 2), true);
                    put(new CheckPasswordInput("BIzygIA^%$3PLIl8erWwPSxfwXCX0h8FKBdWLAZPSdmPEWl%Sw#8a*iS2$mAFgai",
                            62, 49, 4, 6), true);
                    put(new CheckPasswordInput("EmSH4gUZ",
                            8, 5, 0, 0), true);
                    put(new CheckPasswordInput("P95OT8Cny7K9T1aeX%v",
                            19, 12, 6, 5), false);
                    put(new CheckPasswordInput("zCwE3EzsPTc9vlewSrsqW2dU7mTx17WU^f",
                            34, 27, 9, 1), false);
                    put(new CheckPasswordInput("hNOOM^cG6DbrtX2YqNEeKnHu4&sQBx",
                            30, 23, 1, 0), true);
                    put(new CheckPasswordInput("Zxy0$9*i^yU*9tnmaGo8XvlKM!p7",
                            32, 18, 5, 5), false);
                    put(new CheckPasswordInput("If4FdJLh@jgSj@9qC&Yj33X^dPAZuSeICi6uZwA2oPjHhwA98N$j",
                            52, 42, 8, 5), false);
                    put(new CheckPasswordInput("oaK!pDu3qj*Sj1K7Kt4sWQmvHNqGCXJhBUM*B*12VGr3n!qrSnZebFt",
                            55, 43, 10, 5), false);
                    put(new CheckPasswordInput("!gNJG9nQZ7PqfZyJz&",
                            18, 14, 2, 4), false);
                    put(new CheckPasswordInput("5zGXIyVlv!6KH5HwaLgIH36bFyCd53%@o%MDjh",
                            36, 27, 6, 4), true);
                    put(new CheckPasswordInput("R^tj#etFj^dURIUOOQuWEwmZfxWUyK7G%Apr709QVxTm*2ZZSvMeL#jU2x9C",
                            60, 47, 8, 6), false);
                    put(new CheckPasswordInput("vjpIYMGmEn$YHP9w7S^Dso",
                            22, 18, 1, 0), true);
                    put(new CheckPasswordInput("IPS9fQIi#1OY5A!ULtW%puCAE$M9@^aD07CpNuRO",
                            38, 27, 6, 4), true);
                    put(new CheckPasswordInput("wMUsoRxhDXbz$TuyfU6pYFTqIT0Rg@K@VFLRqi*!BgA",
                            43, 36, 3, 5), false);
                    put(new CheckPasswordInput("YGwyf&y@9C$KYBkISl#",
                            18, 12, 0, 3), true);
                    put(new CheckPasswordInput("tBl9uNJmZ@9nah#aBKs5nYoKLAmOsFHOIsSF&q32JiPQq",
                            45, 37, 5, 1), true);
                    put(new CheckPasswordInput("bNw%383jglRCJGHdr8JPngsI*qtd*wMt",
                            33, 25, 4, 3), false);
                    put(new CheckPasswordInput("FgVias1*KSv45FR3#6$wY7P$nN0US",
                            29, 18, 7, 5), false);
                    put(new CheckPasswordInput("2aRzhTcezKmsEw0zFCkbItv733bCu6N1RcJjhVBmcbQhff7k5Q",
                            50, 41, 9, 1), false);
                    put(new CheckPasswordInput("nN6py8VJpmF6jA8uvPqR15rR8#2^l^JPRmtP&x&4Vy2WzWZp8$YY$bxvDr9Sx",
                            61, 44, 12, 7), false);
                    put(new CheckPasswordInput("i&cY7!#AKW7BXcAg#yk",
                            19, 13, 6, 4), false);
                    put(new CheckPasswordInput("CaiG^79R@!5O6kN!gJWnWN7Gw9LsD",
                            29, 19, 10, 4), false);
                    put(new CheckPasswordInput("@ItJCs78uOSEKicSloCvXaED4wjcbeUpE$c9ayaI!EM!Adsw6037i19q19n",
                            57, 41, 10, 3), true);
                    put(new CheckPasswordInput("YByTK%fa^qKBNTn",
                            15, 13, 3, 2), false);
                    put(new CheckPasswordInput("uIs^SE11oDAxwhWr&aDuY@%sWKua5DgYPUx3R533kpTI1cciBEIZ",
                            51, 39, 6, 4), true);
                    put(new CheckPasswordInput("9oyJciOwMsjk!%ggq2NL9CF3Bl^",
                            30, 20, 4, 3), false);
                    put(new CheckPasswordInput("LgLsQ5BAU!qpc#^W!3*Q51b",
                            21, 13, 3, 3), true);
                    put(new CheckPasswordInput("*UVr&rznRox*StJXw7dkeqno$9",
                            30, 20, 2, 4), false);
                    put(new CheckPasswordInput("DNdz*5VBIE9dCJqpP$M7bvAEMGp67mQ2YJ%ri0yzAOWpyP1RbYk",
                            51, 42, 8, 3), false);
                    put(new CheckPasswordInput("yvPA7ZR@4dGhqW2H$Ol@j!pGDoM",
                            27, 20, 4, 4), false);
                    put(new CheckPasswordInput("%%YSBYiaqoRt@lssUxijrj$htzHGt5",
                            30, 25, 0, 4), true);
                    put(new CheckPasswordInput("7NspJ5!Oyso5SOmGk*7leK5mBun45bcqsm&8%CrAit*RRzhtl7^P",
                            52, 38, 9, 6), false);
                    put(new CheckPasswordInput("GKMOrS0P5OXu*KAT7!a^b8p1%nF^7GL6a!kEsM7V^2*",
                            46, 26, 9, 8), false);
                    /* END AUTOGENERATED CODE */
                }
            };
}
